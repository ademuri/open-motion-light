name: PlatformIO CI

on: [push]

jobs:
  common:
    runs-on: ubuntu-latest
    outputs:
      platformio_installed: ${{ steps.install_platformio.outcome }}
      platformio_path: ${{ steps.get_platformio_path.outputs.platformio_path }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v3
      - name: Install PlatformIO
        id: install_platformio
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: Get PlatformIO Path
        id: get_platformio_path
        run: |
          echo "platformio_path=$(which platformio)" >> $GITHUB_OUTPUT
  build:
    needs: common
    if: needs.common.outputs.platformio_installed == 'success'
    runs-on: ubuntu-latest
    env:
      PLATFORMIO_PATH: ${{ needs.common.outputs.platformio_path }}
    steps:
      - uses: actions/checkout@v4
      - name: Add PlatformIO to PATH
        run: echo "$PLATFORMIO_PATH" >> $GITHUB_PATH
      - name: Build
        run: platformio run -e default

  test:
    needs: common
    if: needs.common.outputs.platformio_installed == 'success'
    runs-on: ubuntu-latest
    env:
      PLATFORMIO_PATH: ${{ needs.common.outputs.platformio_path }}
    steps:
      - uses: actions/checkout@v4
      - name: Add PlatformIO to PATH
        run: echo "$PLATFORMIO_PATH" >> $GITHUB_PATH
      - name: Test
        run: platformio test -e native
